<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="/css/uprofile.css">
    <link rel="stylesheet" href="/css/reqform.css">
    <link rel="stylesheet" href="/css/admin.css">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar sidebar-hidden" id="sidebar">
            <h2>Dashboard</h2>
            <nav>
                <ul>
                    <li><a href="/adminDash">Dashboard</a></li>
                    <li><a href="/adminMech">Mechanic Profile</a></li>
                    <li><a href="/adminUprofile">User Profile</a></li>
                    <li><a href="/adminInv">Inventory</a></li>
                    <li><a href="/adminReq">Request Schedule</a></li>
                    <li><a href="/adminHis">History</a></li>
                </ul>
            </nav>
        </aside>

        <button class="sidebar-toggle" onclick="toggleSidebar()">â˜°</button>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Top Navbar -->
            <header class="top-navbar">
                <div class="user-profile">
                    <img src="/images/profile.jpg" alt="User Profile" class="profile-pic">
                    <div class="dropdown">
                        <button class="dropbtn">User Profile</button>
                        <div class="dropdown-content">
                            <a href="/">Logout</a>
                        </div>
                    </div>
                </div>
            </header>

<!------------------------------------------------------------Dashboard Content------------------------------------------------------------>
        <div style="width: 900px; display: flex; height: 350px; margin-left: 15%; padding: 10px; margin-top: 2%; border-radius: 10px; 
        background-color: rgba(255, 255, 255, 0.5); backdrop-filter: blur(5px);">
        <!-- Gender Distribution Chart -->
        <canvas id="genderDistributionChart" width="800" height="600" ></canvas>
        <!-- Address Distribution Chart -->
        <canvas id="addressDistributionChart" width="900" height="600" style="margin-left: 60px;"></canvas>
        </div>

        <script>
            
                    async function fetchGenderDistribution() {
                        const response = await fetch('/api/genderDistribution');
                        return response.json();
                    }


                    async function fetchAddressDistribution() {
                        const response = await fetch('/api/addressDistribution');
                        return response.json();
                    }

                    // Initialize charts with fetched data
                    async function initializeCharts() {
                        const genderData = await fetchGenderDistribution();
                        const addressData = await fetchAddressDistribution();

                        // Gender Distribution Chart
                        const genderRadarData = {
                            labels: Object.keys(genderData),
                            datasets: [{
                                label: 'Gender Distribution',
                                data: Object.values(genderData),
                                backgroundColor: [
                                    'rgba(86, 255, 86, 0.6)',
                                    'rgba(54, 162, 235, 0.6)',
                                    'rgba(255, 99, 132, 0.6)'
                                ]
                            }]
                        };

                        const genderRadarConfig = {
                            type: 'bar',
                            data: genderRadarData,
                            options: {
                                responsive: true,
                                plugins: {
                                    title: {
                                        display: true,
                                        text: 'Gender Distribution Bar Chart'
                                    },
                                },
                                scales: {
                                    r: {
                                        angleLines: { display: false },
                                        suggestedMin: 0,
                                        suggestedMax: Math.max(...Object.values(genderData)) + 10
                                    }
                                }
                            },
                        };

                        var genderRadarCtx = document.getElementById('genderDistributionChart').getContext('2d');
                        new Chart(genderRadarCtx, genderRadarConfig);

                        
                        const addressDistributionData = {
                            labels: Object.keys(addressData),
                            datasets: [{
                                label: 'Address Distribution',
                                data: Object.values(addressData),
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.6)',
                                    'rgba(54, 162, 235, 0.6)',
                                    'rgba(255, 206, 86, 0.6)',
                                    'rgba(86, 255, 86, 0.6)',
                                    'rgba(153, 50, 204, 0.6)',
                                ]
                            }]
                        };

                        const addressDistributionConfig = {
                            type: 'polarArea',
                            data: addressDistributionData,
                            options: {
                                responsive: true,
                                plugins: {
                                    legend: { position: 'top' },
                                    title: { display: true, text: 'Address Distribution Chart' }
                                }
                            },
                        };

                        var addressCtx = document.getElementById('addressDistributionChart').getContext('2d');
                        new Chart(addressCtx, addressDistributionConfig);
                    }

                
                    initializeCharts();
                </script>


        <div class="container">
            <!-- Total Users Card -->
            <div class="card" id="total-users">
                <div class="box">
                    <div class="percent">
                        <div class="progress-container">
                            <div class="progress-circle">
                                <span class="progress-text"></span>
                                <svg class="svg" width="150" height="150">
                                    <circle class="circle-bg" cx="70" cy="70" r="65"></circle>
                                    <circle class="circle" cx="70" cy="70" r="65"></circle>
                                </svg>
                            </div>
                        </div>
                    </div>
                    <h4 class="text"><i class="bi bi-people"></i> Total Users</h4>
                </div>
            </div>
            
            
            <div class="card" id="total-mechanics">
                <div class="box">
                    <div class="percent">
                        <div class="progress-container">
                            <div class="progress-circle">
                                <span class="progress-text"></span>
                                <svg class="svg" width="150" height="150">
                                    <circle class="circle-bg" cx="70" cy="70" r="65"></circle>
                                    <circle class="circle" cx="70" cy="70" r="65"></circle>
                                </svg>
                            </div>
                        </div>
                    </div>
                    <h4 class="text"><i class="bi bi-card-checklist"></i> Total Mechanics</h4>
                </div>
            </div>

            <!-- Total Pending Trasnctions -->
            <div class="card" id="total-pending">
                <div class="box">
                    <div class="percent">
                        <div class="progress-container">
                            <div class="progress-circle">
                                <span class="progress-text"></span>
                                <svg class="svg" width="150" height="150">
                                    <circle class="circle-bg" cx="70" cy="70" r="65"></circle>
                                    <circle class="circle" cx="70" cy="70" r="65"></circle>
                                </svg>
                            </div>
                        </div>
                    </div>
                    <h4 class="text"><i class="bi bi-chat-dots"></i>Pending Trasnctions</h4>
                </div>
            </div>
        </div>


  <script>
    // Fetch stats from the server
    fetch('/dashboard-stats')
        .then(response => response.json())
        .then(data => {
            console.log(data);
            document.querySelector('#total-users .progress-text').textContent = data.totalUsers;
            document.querySelector('#total-mechanics .progress-text').textContent = data.totalMechanics;
            document.querySelector('#total-pending .progress-text').textContent = data.totalPendingTransactions;
        })
        .catch(error => console.error('Error fetching dashboard stats:', error));
    </script>




<!--......................................Hide href......................................-->
        <script>
            function showSection(sectionId) {
                const sections = ['dashboard'];
                
                sections.forEach(id => {
                    const section = document.getElementById(id);
                    if (section) {
                        section.style.display = 'none'; 
                    }
                });

                const activeSection = document.getElementById(sectionId);
                if (activeSection) {
                    activeSection.style.display = 'block'; 
                }

                const sidebarLinks = document.querySelectorAll('.sidebar nav ul li a');
                sidebarLinks.forEach(link => {
                    link.classList.remove('active');
                });
                document.querySelector(`.sidebar nav ul li a[onclick="showSection('${sectionId}')"]`).classList.add('active');
                
                localStorage.setItem('activeSection', sectionId);
            }

            document.addEventListener('DOMContentLoaded', () => {
                const activeSection = localStorage.getItem('activeSection') || 'dashboard';
                showSection(activeSection); 
            });
        </script>


<!--......................................Search......................................-->
        <script>
            function searchTable() {
                var input, filter, table, tr, td, i, txtValue;
                input = document.getElementById("searchInput");
                filter = input.value.toUpperCase();
                table = document.getElementById("requestTable");
                tr = table.getElementsByTagName("tr");
    
                for (i = 1; i < tr.length; i++) {
                    tr[i].style.display = "none";
                    td = tr[i].getElementsByTagName("td");
                    for (var j = 0; j < td.length - 1; j++) { 
                        if (td[j]) {
                            txtValue = td[j].textContent || td[j].innerText;
                            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                                tr[i].style.display = "";
                                break;
                            }
                        }
                    }
                }
            }
        </script>


<!--......................................TogglesideBar......................................-->
        <script>
            function toggleSidebar() {
                const sidebar = document.getElementById('sidebar');
                sidebar.classList.toggle('sidebar-hidden');
            }
        </script>



        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>
</html>
